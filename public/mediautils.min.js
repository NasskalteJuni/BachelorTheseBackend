var MediaUtilities=function(e){"use strict";var t=class{constructor(){this._context=new AudioContext,this._out=this._context.createMediaStreamDestination(),this._in={}}get out(){return this._out.stream}get outputTrack(){return this._out.stream.getAudioTracks()[0]}addMedia(e,t){1===arguments.length&&(t=e.id),e instanceof MediaStreamTrack&&(e=new MediaStream([e])),this._in[t]=this._context.createMediaStreamSource(e),this._rebuildGraph()}removeMedia(e){0===arguments.length&&Object.keys(this._in).forEach(e=>delete this._in[e]),(arguments[0]instanceof MediaStream||arguments[0]instanceof MediaStreamTrack)&&(e=arguments[0].id),delete this._in[e],this._rebuildGraph()}_rebuildGraph(){const e=Object.values(this._in);this._merger&&this._merger.disconnect(),e.length&&(this._merger=this._context.createChannelMerger(e.length),this._merger.connect(this._context.destination),e.forEach((e,t)=>e.connect(this._merger,0,t)))}close(){this._context.close()}};var i=class{constructor(e){this.__isVideoMixingConfigurationObject=!0,this.width=0,this.height=0,this._applicable=e.applicable||!0,this._positions=e.positions||[],this._background=e.background||"rgb(20,20,20)",this._priority=e.priority||0,this.paint=null}applicable(e){return"function"==typeof this._applicable?this._applicable(e):!!this._applicable}priority(e){return void 0===this._priority?0:"function"==typeof this._priority?this._priority(e):+this._priority}background(){return"function"==typeof this._background?this._background:()=>this._background}positions(e,t,i){return"function"==typeof this._positions?this._positions(e,t,i):this._positions instanceof Array?this._positions[t]:Object.assign({},this._positions)}},s=(e=Object)=>class t extends e{constructor(){super(...arguments),this._configChangeHandler=()=>{},this._streamIds=[],this._configs={},this._currentConfigId=null}updateStreamIds(e){return this._streamIds=e,this._findCurrentConfig(),this.currentConfig}get currentConfig(){return this.currentConfigId?this._configs[this._currentConfigId]:null}get currentConfigId(){return this._currentConfigId}forceConfig(e){if(!this._configs[e])throw new Error("No config with the id "+e);const t=this._currentConfigId;this._currentConfigId=e,this._configChangeHandler(this._configs[e],e,t)}static _videoMixingConfigurationTypeGuard(e){return!e.__isVideoMixingConfigurationObject&&!e instanceof i&&(e=new i(e)),e}addConfig(e,i){this._configs[i]=t._videoMixingConfigurationTypeGuard(e),this._findCurrentConfig()}removeConfig(e){if(!this._configs[e])throw new Error("No config with the id "+e);delete this._configs[e],this._findCurrentConfig()}onConfigChange(e){if("function"!=typeof e)throw new Error("Callback must be a function");this._configChangeHandler=e}_findCurrentConfig(){let e=null,t=-1/0;for(let i in this._configs){if(!this._configs.hasOwnProperty(i))continue;const s=this._configs[i];if(s.applicable(this._streamIds)){const n=s.priority(this._streamIds);t<n&&(e=i,t=n)}}const i=this._currentConfigId;this._currentConfigId=e,i!==this._currentConfigId&&this._configChangeHandler(this.currentConfig,this._currentConfigId,i)}},n=(e=Object)=>class extends e{constructor(){super(...arguments),this._streams={},this._onStreamChangeHandler=()=>{}}addMedia(e,t){1===arguments.length&&(t=e.id),e instanceof MediaStreamTrack&&(e=new MediaStream([e]));const i=document.createElement("video");i.autoplay=!0,i.muted=!0,i.srcObject=e,i.style.visibility="hidden",i.style.pointerEvents="none",i.style.position="fixed",i.style.left="0",i.style.top="0",i.style.width="1px",i.style.height="1px",i.width=1,i.height=1,i.setAttribute("playsinline",""),i.addEventListener("pause",()=>i.play()),document.body.appendChild(i),this._streams[t]=i,this._onStreamChangeHandler(this.streamIds())}removeMedia(e){if(0===arguments.length)return this.streamIds().forEach(e=>this.removeMedia(e));if(e instanceof MediaStream||e instanceof MediaStreamTrack){const t=this.streamIds().filter(t=>this._streams[t].srcObject.id===e.id||this._streams[t].srcObject.getTracks[0].id===e.id);t.length&&(e=t[0])}delete this._streams[e],this._onStreamChangeHandler(this.streamIds())}streamIds(){return Object.keys(this._streams)}videoByStreamId(e){return this._streams[e]}onStreamChange(e){if("function"!=typeof e)throw new Error("Callback must be of type function");this._onStreamChangeHandler=e}};class r extends(n(s())){constructor({canvas:e=null,fps:t=30,startImmediately:i=!0,width:s=-1,height:n=-1}={}){super(),this._width=s,this._height=n,this.fps=t,this._initCanvas(e,s,n),i&&this.start(),this.onStreamChange(e=>{this.updateStreamIds(e),this.currentConfig&&this._precalculatePositionsAndMatchStreams(this.currentConfig)}),this.onConfigChange(this._precalculatePositionsAndMatchStreams),this._snapshot=null}_precalculatePositionsAndMatchStreams(e){if(e.width=this._canvas.width,e.height=this._canvas.height,!e.paint){const t=this.streamIds();e.calculatedPositions=t.map(e.positions.bind(e)),e.calculatedPositions.sort((e,i)=>{const s=(void 0!==e.id?0:void 0!==e.index?1:2)-(void 0!==i.id?0:void 0!==i.index?1:2);return 0===s&&void 0!==e.index?("function"==typeof e.index?e(t):e)-("function"==typeof i.index?i(t):i):s}),e.calculatedPositions.forEach(e=>{let i=null;if(void 0!==e.id){if(i="function"==typeof e.id?e.id(t):e.id,!this.videoByStreamId(i))throw new Error("no stream with id "+i);e.source=this.videoByStreamId(i),e.assignedId=i}else if(void 0!==e.index){let s="function"==typeof e.index?e.index(t):e.index;if(s>t.length)throw new Error("not enough streams for index "+s);i=t[s],e.source=this.videoByStreamId(i),e.assignedId=i}else{if(!t.length)throw new Error("more position definitions than streams");i=t[0],e.source=this.videoByStreamId(i),e.assignedId=i}t.shift()})}}_initCanvas(e,t,i){null===e&&(e=document.createElement("canvas")),this._canvas="string"==typeof e?document.querySelector(e):e,this._canvas&&(-1!==this._width?(e.width=this._width,e.style.width=this._width+"px"):this._width=+this._canvas.style.width.replace("px",""),-1!==this._height?(e.height=this._height,e.style.height=this._height+"px"):this._height=+this._canvas.style.height.replace("px",""),this._context=this._canvas.getContext("2d"),this._context.clearRect(0,0,this._canvas.width,this._canvas.height),this._out=this._canvas.captureStream(this.fps)),this._canvas||"string"!=typeof e||window.addEventListener("load",()=>this._initCanvas(e,t,i))}get out(){return this._out}get outputTrack(){return this._out.getVideoTracks()[0]}get width(){return this._width}get height(){return this._height}start(){this._paintloop=setInterval(this._draw.bind(this),1e3/this.fps)}stop(){clearInterval(this._paintloop),this._context.clearRect(0,0,this._canvas.width,this._canvas.height)}snapshot(e){this._snapshot=e}_draw(){if(!this.currentConfig)return;const e=this.streamIds();if(this.currentConfig.paint)this.currentConfig.paint(e,this._canvas,this._context);else{const t={background:null,mixed:[]};this._context.clearRect(0,0,this._width,this._height);const i=this.currentConfig.background()(e);this._context.fillStyle=i,t.background=i,this._context.fillRect(0,0,this._width,this._height);const s=(e,t)=>"function"==typeof e?e(t):e;this.currentConfig.calculatedPositions.sort((e,t)=>void 0!==e.zIndex&&void 0!==t.zIndex?("function"==typeof e.zIndex?e.zIndex({id:e.assignedId}):e.zIndex)-("function"==typeof t.zIndex?t.zIndex({id:t.assignedId}):t.zIndex):void 0!==e.zIndex?1:-1).forEach((e,i)=>{const n={width:this.width,height:this.height,id:e.assignedId,drawIndex:i};if(e.source){const r=s(e.x,n),a=s(e.y,n),o=s(e.width,n),c=s(e.height,n);this._context.drawImage(e.source,r,a,o,c),t.mixed.push({id:e.assignedId,drawIndex:i,x:r,y:a,width:o,height:c})}}),this._snapshot&&(this._snapshot(t),this._snapshot=null)}}}var a=r;var o=class{constructor(e,{audioOnly:t=!1,startImmediately:i=!0,fileExtension:s=null}={}){this._fileExtension=s,this._recorder=new MediaRecorder(e),this._data=[],this.maxRetrievalTime=5e3,i?this._recorder.start():this.start=()=>this._recorder.start()}_createFileName(){return(new Date).toISOString()+"_recording"+(this._fileExtension||(this._recorder.mimeType.startsWith("audio")?".ogg":".mp4"))}toFile(){return new Promise((e,t)=>{const i=setTimeout(()=>clearTimeout(i)||t(new Error("Retrieving data took to long")),this.maxRetrievalTime);this._recorder.ondataavailable=i=>{0===i.data.size&&t(new Error("Empty Recorder or cannot access recorded data at the moment")),this._data.push(i.data);const s=new Blob(this._data,this._recorder.mimeType);e(new File([s],this._createFileName()))},this._recorder.onerror=e=>t(e),this._recorder.requestData()})}};var c=(e=Object)=>class extends e{constructor(){super(...arguments),this._listeners={}}addEventListener(e,t){if(e=e.toLowerCase(),"function"!=typeof t)throw new Error("Argument 1 is not of type function");this._listeners[e]instanceof Array||(this._listeners[e]=[]),this._listeners[e].push(t)}removeEventListener(e,t,i=!1){if(e=e.toLowerCase(),"function"!=typeof t)throw new Error("Argument 1 is not of type function");if(this._listeners[e]instanceof Array)if(i)this._listeners[e]=this._listeners[e].filter(e=>e.toString()!==t.toString());else{const i=this._listeners[e].findIndex(e=>e.toString()===t.toString());-1!==i&&this._listeners[e].splice(i,1)}}dispatchEvent(e,t=[]){e=e.toLowerCase(),this._listeners[e]instanceof Array&&this._listeners[e].forEach(e=>e(...t))}};class d extends(c()){constructor({id:e=(new Date).getTime().toString(32)+Math.random().toString(32).substr(2,7),peer:t=null,name:i=null,signaler:s,iceServers:n=[],useUnifiedPlan:r=!0,isYielding:a,verbose:o=!1,logger:c=console}={}){super(),this._signaler=s,this._connectionConfig={iceServers:n,sdpSemantics:r?"unified-plan":"plan-b"},this._id=e,this._peer=t,this._name=i||this._id,this._signaler.addEventListener("message",e=>this._handleSignallingMessage(e)),this._verbose=o,this._isYielding=void 0===a?!!this._name&&this._name.localeCompare(this._peer)>0:a,this._offering=!1,this._receivedStreams=[],this._receivedTracks=[],this._addedTracks=[],this._logger=c,this._metaCache={},this._unboundTransceivers=[],this._setupPeerConnection()}get id(){return this._id}get peer(){return this._peer}get verbose(){return this._verbose}set verbose(e){this._verbose=!!e}_setupPeerConnection(){this._connection=new RTCPeerConnection(this._connectionConfig),this._connection.addEventListener("icecandidate",e=>this._forwardIceCandidate(e.candidate)),this._connection.addEventListener("negotiationneeded",()=>this._startHandshake()),this._connection.addEventListener("iceconnectionstatechange",()=>this._handleIceChange()),this._connection.addEventListener("connectionstatechange",()=>this._restartJammedConnectionAttempts()),this._connection.addEventListener("track",({track:e,streams:t})=>this._handleIncomingTrack(e,t)),this._connection.addEventListener("signalingstatechange",()=>this._syncNewTransceivers()),this._verbose&&this._logger.log("created new peer connection ("+this._id+") using "+("unified-plan"===this._connectionConfig.sdpSemantics?"the standard":"deprecated chrome plan b")+" sdp semantics")}_handleIncomingTrack(e,t){const i=[];if("audio"===e.kind){const t=document.createElement("audio");t.muted=!0,t.autoplay=!0,t.srcObject=new MediaStream([e])}const s=this._connection.getTransceivers().filter(t=>t.receiver.track&&t.receiver.track.id===e.id),n=s.length>0?s[0].mid:null;this._metaCache[n]&&(e.meta=this._metaCache[n],delete this._metaCache[n]),this.dispatchEvent("trackadded",[e,n]),t.forEach(t=>{-1===this._receivedStreams.findIndex(e=>e.id===t.id)&&(this._receivedStreams.push(t),i.push(t),this.dispatchEvent("streamadded",[t,e,n]))}),this._receivedTracks.push(e),this.dispatchEvent("mediachanged",[{change:"added",track:e,streams:t,peer:this._peer}]),e.addEventListener("ended",()=>{this._receivedTracks=this._receivedTracks.filter(t=>t.id!==e.id),this.dispatchEvent("mediachanged",[{change:"removed",track:e,peer:this._peer,mid:n}]),this.dispatchEvent("trackremoved",[e,n]),t.forEach(t=>{t.active||(this._receivedStreams=this._receivedStreams.filter(e=>e.id!==t.id),this.dispatchEvent("streamremoved",[t,e,n]))})}),this.dispatchEvent("mediachanged",[{change:"added",track:e,streams:t,newStreams:i,peer:this._peer,mid:n}])}_forwardIceCandidate(e){null!==e&&this._signaler.send({receiver:this._peer,data:e,type:"ice"})}async _handleSignallingMessage(e){if(e.sender!==this._peer)return;const t=e.type.toLowerCase();"sdp"===t?await this._handleSdp(e.data):"ice"===t?await this._handleRemoteIceCandidate(e.data):"connection:close"===t?await this._handleClosingConnection():"receiver:stop"===t?await this._stopReceiver(e.data):"track:meta"===t?this._changeMetaOfTrack(e.data.mid,e.data.meta):this._verbose&&this._logger.log("could not find handle for msg type",t,e)}async _startHandshake(){try{this._verbose&&this._logger.log("negotiation is needed"),this._offering=!0;const e=await this._connection.createOffer();if("stable"!==this._connection.signalingState)return;this._verbose&&this._logger.log("set local description on connection "+this._id+":",this._connection.localDescription),await this._connection.setLocalDescription(e);const t={receiver:this._peer,data:e,type:"sdp"};this._signaler.send(t)}catch(e){this._logger.error(e)}finally{this._offering=!1}}async _handleRemoteIceCandidate(e){if(null!==e)try{await this._connection.addIceCandidate(e)}catch(e){if(!this._ignoredOffer)throw e}}async _handleSdp(e){this._verbose&&this._logger.log("received sdp",e);try{const t="stable"!==this._connection.signalingState||this._offering;if(t&&this._verbose&&this._logger.log("collision"),this._ignoredOffer=!this._isYielding&&"offer"===e.type&&t)return void(this._verbose&&this._logger.log(this._id+" for "+this._peer+" ignored offer due to glare"));t&&"offer"===e.type?(this._verbose&&this._logger.log(this._id+" for "+this._peer+" handles glare by yielding"),await Promise.all([this._connection.setLocalDescription({type:"rollback"}),this._connection.setRemoteDescription(e)])):await this._connection.setRemoteDescription(e),"offer"===e.type&&(await this._connection.setLocalDescription(await this._connection.createAnswer()),this._signaler.send({type:"sdp",receiver:this._peer,data:this._connection.localDescription}))}catch(e){this._logger.error(e)}}_syncNewTransceivers(){const e=[];"stable"===this._connection.signalingState&&this._unboundTransceivers.forEach((t,i)=>{if(null!==t.mid){const i=this._connection.getTransceivers().filter(e=>e===t);if(i.length){const t=i[0];e.push(t),t.sender.track&&t.sender.track.meta&&this._signaler.send({type:"track:meta",data:{mid:t.mid,meta:t.sender.track.meta},receiver:this._peer})}}}),this._unboundTransceivers=this._unboundTransceivers.filter(t=>-1===e.indexOf(t))}_addTrackToConnection(e,t=[]){this._addedTracks.push(e),this._verbose&&this._logger.log("add track to connection "+this._id,e);const i={direction:"sendonly",streams:t};this._unboundTransceivers.push(this._connection.addTransceiver(e,t instanceof Array?i:t))}_removeTrackFromConnection(e){let t=0;const i="string"==typeof e,s=e instanceof MediaStreamTrack;this._addedTracks=s?this._addedTracks.filter(t=>t.id!==e.id):this._addedTracks.filter(t=>"*"!==e&&t.kind!==e),this._connection.getTransceivers().forEach(n=>{if("sendrecv"===n.direction||"sendonly"===n.direction){const r=n.sender.track;(r&&s&&r.id===e.id||i&&(r.kind===e||"*"===e))&&(this._connection.removeTrack(n.sender),"sendrecv"===n.direction?n.direction="recvonly":n.direction="inactive",this._signaler.send({receiver:this._peer,type:"receiver:stop",data:n.mid}),t++)}}),this._verbose&&this._logger.log("removed "+t+" tracks from connection "+this._id)}_stopReceiver(e){this._connection.getTransceivers().filter(t=>t.mid===e).forEach(e=>{const t=e.receiver.track;t&&(t.stop(),t.dispatchEvent(new Event("ended")))})}_changeMetaOfTrack(e,t){this._verbose&&console.log("meta of track bound to transceiver "+e+" will change to "+t);const i=this._connection.getTransceivers().filter(t=>t.mid===e);if(i.length&&i[0].receiver.track){const e=i[0].receiver.track;e.meta=t,e.dispatchEvent(new Event("metachanged",[t]))}else this._metaCache[e]=t}_replaceTrack(e,t){const i=e instanceof MediaStreamTrack,s="string"==typeof e&&("audio"===e||"video"===e||"*"===e),n=this._addedTracks.findIndex(t=>i&&t.id===e.id||s&&(t.kind===e||"*"===e));-1!==n&&(this._addedTracks[n]=t),this._connection.getTransceivers().forEach(n=>{"sendrecv"!==n.direction&&"sendonly"!==n.direction||(n.sender.track&&i&&n.sender.track.id===e.id||s&&n.sender.track.kind===e)&&(n.sender.replaceTrack(t),t instanceof MediaStreamTrack&&this._signaler.send({type:"track:meta",data:{mid:n.mid,meta:track.meta||""},receiver:this._peer}))})}_muteTrack(e,t=!0){const i=e instanceof MediaStreamTrack,s="string"==typeof e&&["audio","video","*"].indexOf(e)>=0;this._connection.getTransceivers().forEach(n=>{if(t?n.sender.track:n.sender._muted){const r=()=>i&&n.sender.track.id===e.id||s&&("*"===e||n.sender.track.kind===e),a=()=>i&&n.sender._muted.id===e.id||s&&("*"===e||n.sender._muted.kind===e);(t?r():a())&&(t?n.sender._muted||(n.sender._muted=n.sender.track,n.sender.replaceTrack(null)):n.sender._muted&&(n.sender.replaceTrack(n.sender._muted),delete n.sender._muted))}})}_handleIceChange(){"disconnected"===this._connection.iceConnectionState&&(this._connection.close(),this.dispatchEvent("close",[])),"failed"===this._connection.iceConnectionState&&this._connection.restartIce()}_restartJammedConnectionAttempts(){const e=()=>{clearTimeout(this._connectingAttemptTimeout),this._connectingAttemptTimeout=void 0};"connecting"===this._connection.connectionState?this._connectingAttemptTimeout=setTimeout(async()=>{this._verbose&&this._logger.log("connection exceeded time to connect and is assumed to be jammed, restarting ice gathering..."),e(),"have-local-offer"===this._connection.signalingState&&await this._connection.setLocalDescription({type:"rollback"}),this._connection.restartIce(),this._connection.dispatchEvent(new Event("negotiationneeded"))},3e3+2e3*Math.random()):e()}async addMedia(e){2===arguments.length?this._addTrackToConnection(arguments[0],arguments[1]):e instanceof MediaStream?e.getTracks().forEach(t=>{e.meta&&(t.meta=e.meta),this._addTrackToConnection(t,[e])}):e instanceof MediaStreamTrack?this._addTrackToConnection(e,[new MediaStream([e])]):"string"==typeof e&&["audio","video","*"].indexOf(e)>=0?this._addTrackToConnection(e,[new MediaStream([])]):this._logger.error("unknown media type",typeof e,e)}removeMedia(e){e instanceof MediaStream?e.getTracks().forEach(e=>this._removeTrackFromConnection(e)):e instanceof MediaStreamTrack||"string"==typeof e&&["audio","video","*"].indexOf(e)>=0?this._removeTrackFromConnection(e):void 0===typeof e||0===arguments.length||"string"==typeof e&&"*"===e?this._removeTrackFromConnection("*"):this._logger.error("unknown media type",typeof e,e)}muteMedia(e,t=!0){e instanceof MediaStream?e.getTracks().forEach(e=>this._muteTrack(e,t)):e instanceof MediaStreamTrack||"string"==typeof e&&["audio","video","*"].indexOf(e)>=0?this._muteTrack(e,t):void 0===typeof e||0===arguments.length||"string"==typeof e&&"*"===e?this._muteTrack("*",t):this._logger.error("unknown media type",typeof e,e)}get tracks(){return this._receivedTracks}get streams(){return this._receivedStreams.filter(e=>e.active)}get addedTracks(){return this._addedTracks}_handleClosingConnection(){this._verbose&&this._logger.log("connection closing down"),this._receivedTracks.forEach(e=>{e.stop(),e.dispatchEvent(new Event("ended"))}),this._connection.close(),this.dispatchEvent("close")}close(){const e={receiver:this._peer,data:"immediately",type:"connection:close"};this._signaler.send(e),this._connection.close(),this.dispatchEvent("close")}get closed(){return"closed"===this._connection.connectionState||"closed"===this._connection.signalingState}async getReport(e=1e3){const t=e=>{const t={inbound:{bytes:0,packets:0,packetLoss:0},outbound:{bytes:0,packets:0,packetLoss:0},timestamp:0};for(let i of e)"inbound-rtp"===i.type?(t.inbound.bytes+=i.bytesReceived,t.inbound.packets+=i.packetsReceived,t.inbound.packetLoss+=i.packetsLost):"outbound-rtp"===i.type?(t.outbound.bytes+=i.bytesSent,t.outbound.packets+=i.packetsSent):"remote-inbound-rtp"===i.type?t.outbound.packetLoss+=i.packetsLost:"peer-connection"===i.type&&(t.timestamp=i.timestamp);return t};return new Promise(async(i,s)=>{try{const s=(await this._connection.getStats()).values();setTimeout(async()=>{const e=(await this._connection.getStats()).values(),n=t(s),r=t(e),a=r.timestamp-n.timestamp;i({inbound:{bytes:r.inbound.bytes-n.inbound.bytes,packets:r.inbound.packets-n.inbound.packets,packetLoss:r.inbound.packetLoss-n.inbound.packetLoss,tracks:this._connection.getTransceivers().filter(e=>"inactive"!==e.currentDirection&&("sendrecv"===e.direction||"recvonly"===e.direction)&&e.receiver.track&&"live"===e.receiver.track.readyState).length},outbound:{bytes:r.outbound.bytes-n.outbound.bytes,packets:r.outbound.packets-n.outbound.packets,packetLoss:r.outbound.packetLoss-n.outbound.packetLoss,tracks:this._connection.getTransceivers().filter(e=>"inactive"!==e.currentDirection&&("sendrecv"===e.direction||"sendonly"===e.direction)&&e.sender.track&&"live"===e.sender.track.readyState).length},duration:a})},e)}catch(e){s(e)}})}}var h=d;class l extends(c()){constructor({name:e,signaler:t,iceServers:i=[],useUnifiedPlan:s=!0,verbose:n=!1,logger:r=console,isYielding:a}={}){super(),this._signaler=t,this._verbose=n,this._logger=r,this.connections={},this.localMediaStreams=[],this._signaler.addEventListener("message",t=>{switch(t.type){case"user:connected":this._verbose&&this._logger.log("new user connected",t.data),this.connections[t.data]=new h({peer:t.data,name:e,iceServers:i,signaler:this._signaler,useUnifiedPlan:s,isYielding:a,verbose:n,logger:r}),this.dispatchEvent("userconnected",[t.data]),this._forwardEvents(this.connections[t.data]),this.localMediaStreams.forEach(e=>this.connections[t.data].addMedia(e)),this.connections[t.data].addEventListener("close",()=>delete this.connections[t.data]);break;case"user:disconnected":this._verbose&&this._logger.log("user disconnected",t.data),delete this.connections[t.data],this.dispatchEvent("userdisconnected",[t.data]);break;case"user:list":this._verbose&&this._logger.log("list of users received",t.data),t.data.filter(e=>!this.connections[e]).forEach(t=>{this.connections[t]=new h({peer:t,name:e,iceServers:i,signaler:this._signaler,useUnifiedPlan:s,isYielding:a,verbose:n}),this._verbose&&this._logger.log("new user (of list) connected",t),this.dispatchEvent("userconnected",[t]),this._forwardEvents(this.connections[t]),this.localMediaStreams.forEach(e=>this.connections[t].addMedia(e)),this.connections[t].addEventListener("close",()=>delete this.connections[t])})}})}_forwardEvents(e){e.addEventListener("mediachanged",e=>this.dispatchEvent("mediachanged",[e])),e.addEventListener("streamadded",(t,i,s)=>this.dispatchEvent("streamadded",[t,e.peer,i,s])),e.addEventListener("streamremoved",(t,i,s)=>this.dispatchEvent("streamremoved",[t,e.peer,i,s])),e.addEventListener("trackadded",(t,i)=>this.dispatchEvent("trackadded",[t,e.peer,i])),e.addEventListener("trackremoved",(t,i)=>this.dispatchEvent("trackremoved",[t,e.peer,i])),e.addEventListener("close",()=>this.dispatchEvent("connectionclosed",[e.peer,e]))}get users(){return Object.keys(this.connections)}get(e){return this.connections[e]||null}get streams(){return Object.values(this.connections).map(e=>e.streams.length?e.streams:[]).reduce((e,t)=>e.concat(t),[])}get tracks(){return Object.values(this.connections).map(e=>e.tracks.length?e.tracks:[]).reduce((e,t)=>e.concat(t),[])}addMedia(e){if(e instanceof MediaStream)this._verbose&&this._logger.log("added media stream"),this.localMediaStreams.push(e),Object.values(this.connections).forEach(t=>t.addMedia(e));else if(e instanceof MediaStreamTrack){this._verbose&&this._logger.log("added media stream track");const t=new MediaStream([e]);this.localMediaStreams.push(t),Object.values(this.connections).forEach(t=>t.addMedia(e))}else this._logger.error("unknown media type",typeof e,e)}removeMedia(e){0===arguments.length?(this._verbose&&this._logger.log("removed all media"),this.localMediaStreams=[],Object.values(this.connections).forEach(e=>e.removeMedia())):(this._verbose&&this._logger.log("remove single media stream"),this.localMediaStreams=this.localMediaStreams.filter(e=>e.id!==arguments[0].id),Object.values(this.connections).forEach(e=>e.removeMedia(arguments[0])))}muteMedia(e="*",t=!0){Object.values(this.connections).forEach(i=>i.muteMedia(e,t))}async getReport(e=1e3){const t={inbound:{bytes:0,packets:0,packetLoss:0,tracks:0},outbound:{bytes:0,packets:0,packetLoss:0,tracks:0},duration:0};try{const i=await Promise.all(Object.values(this.connections).map(t=>t.getReport(e)));i.reduce((e,t)=>{e.inbound.bytes+=t.inbound.bytes,e.inbound.packets+=t.inbound.packets,e.inbound.packetLoss+=t.inbound.packetLoss,e.inbound.tracks+=t.inbound.tracks,e.outbound.bytes+=t.outbound.bytes,e.outbound.packets+=t.outbound.packets,e.outbound.packetLoss+=t.outbound.packetLoss,e.outbound.tracks+=t.outbound.tracks,e.duration+=Math.floor(t.duration/i.length)},t)}catch(e){this._logger.error(e)}return t}close(e=!1){this._signaler.close(),Object.keys(this.connections).forEach(t=>{this.connections[t].close(),e&&delete this.connections[t]})}}var u=l;class _ extends(c()){constructor({threshold:e=-70,samplingInterval:t=100,smoothingConstant:i=.1,requiredSamplesForSpeech:s=5,verbose:n=!1,logger:r=console}={}){super(),this._smoothingConstant=.1,this._samplingInterval=100,this._treshold=-Math.abs(e),this.requiredSamplesForSpeech=3,this._in={},this._out={},this._context=new AudioContext,this._lastSpeakers=[],this._lastSpeaker=null,this._silence=!0,this._verbose=n,this._logger=r,this._analyzerLoop=setInterval(()=>{Object.keys(this._in).forEach(this._processForEachUser.bind(this));const e=Object.keys(this._out).reduce((e,t)=>this._getStatsFor(t).speaking?e.concat(t):e,[]).sort(),t=e.length,i=this._lastSpeakers.length,s=t!==i||!e.reduce((t,i,s)=>e[s]===this._lastSpeakers[s]&&t,!0),n=0===t&&i>0;t>0&&0===i&&(this._verbose&&this._logger.log("speech start"),this.dispatchEvent("speechstart",[e]),this._silence=!1),n&&(this._verbose&&this._logger.log("speech end"),this.dispatchEvent("speechend",[e]),this._silence=!0),s&&(this._verbose&&this._logger.log("speakers changed",e,this._lastSpeakers),this.dispatchEvent("speechchange",[e,this._lastSpeakers.slice()])),t>0&&(this._lastSpeaker=e[0]),this._lastSpeakers=e},this._samplingInterval)}stop(){clearInterval(this._analyzerLoop)}set threshold(e){this._threshold=-Math.abs(e)}get threshold(){return this._threshold}get out(){return Object.assign({},this._out)}get silence(){return this._silence}get speakers(){return this._lastSpeakers}get lastSpeaker(){return this._lastSpeaker}_getStatsFor(e){return this._out[e]||(this._out[e]={consecutiveSamplesOverTreshold:0,speaking:!1,current:null}),this._out[e]}addMedia(e,t){1===arguments.length&&(t=e.id),e instanceof MediaStreamTrack&&(e=new MediaStream([e]));const i=this._context.createAnalyser();i.fftSize=512,i.smoothingTimeConstant=this._smoothingConstant;const s=new Float32Array(i.frequencyBinCount),n=this._context.createMediaStreamSource(e);n.connect(i),this._in[t]={analyzer:i,fftBins:s,source:n,stream:e}}removeMedia(e){if(0===arguments.length||"*"===e)return Object.keys(this._in).forEach(e=>this.removeMedia(e));if(arguments[0]instanceof MediaStream||arguments[0]instanceof MediaStreamTrack){const t=Object.keys(this._in).filter(t=>this._in[t].stream.getTracks()[0].id===e.id||this._in[t].stream.id===e.id);t.length&&(e=t[0])}delete this._in[e],delete this._out[e],this._lastSpeakers=this._lastSpeakers.filter(t=>t!==e),this._lastSpeaker===e&&(this._lastSpeakers.length?this._lastSpeaker=this._lastSpeakers.indexOf(this._lastSpeaker)>=0?this._lastSpeaker:this._lastSpeakers[0]:this._lastSpeaker=null)}_analyzeVolume(e,t){e.getFloatFrequencyData(t);let i=0,s=-1/0,n=0,r=0;return t.forEach(e=>{e>s&&(s=e),e<i&&(i=e),n+=e,r++}),n/=r,{minVolume:i,maxVolume:s,average:n}}_processForEachUser(e){const t=this._getStatsFor(e),i=this._analyzeVolume(this._in[e].analyzer,this._in[e].fftBins);t.current=i,i.maxVolume>this._treshold?(t.consecutiveSamplesOverTreshold++,t.consecutiveSamplesOverTreshold>this.requiredSamplesForSpeech&&(t.speaking=!0,this.dispatchEvent("speechstartid",[e]))):(t.consecutiveSamplesOverTreshold=0,t.speaking&&(t.speaking=!1,this.dispatchEvent("speechendid",[e])))}}var g=_;var p=class{constructor(e,t={}){this._trackOrKind=e,this._trackSettings=t,this._kind="string"==typeof e?e:e.kind,this._qualities={full:{video:{},audio:{}},high:{video:{maxFramerate:60},audio:{}},medium:{video:{maxFramerate:30},audio:{}},low:{video:{maxFramerate:15,scaleResolutionDownBy:2},audio:{}},micro:{video:{maxFramerate:10,scaleResolutionDownBy:4,maxBitrate:16384},audio:{maxBitrate:32768}}}}_mergeRtpSettingsForTrack(e){const t=Object.assign({},this._trackSettings);return t.sendEncodings?t.sendEncodings.forEach(t=>{Object.keys(e).forEach(i=>{console.log(i,i in t),i in t||(t[i]=e[i])})}):t.sendEncodings=[e],t}transcribe(e){if(e=e.toLowerCase(),-1===Object.keys(this._qualities).indexOf(e))throw new Error("Unsupported quality option");return[this._trackOrKind,this._mergeRtpSettingsForTrack(this._qualities[e][this._kind])]}};class m extends(c()){constructor({endpoint:e,socket:t=null}={}){super(),null===t&&(t=new WebSocket(arguments.length&&"string"==typeof arguments[0]?arguments[0]:e)),this._connection=t,this._queued=[],this._connection.addEventListener("open",()=>this._queued.forEach(e=>this._connection.send(e))),this._connection.addEventListener("close",()=>this.dispatchEvent("close",[])),this._connection.addEventListener("message",e=>this._handleMessage(e))}send(e){e=JSON.stringify(e),1!==this._connection.readyState?this._queued.push(e):this._connection.send(JSON.stringify(e))}close(){return this._connection.close()}get closed(){return this._connection.readyState>1}_handleMessage(e){let t=JSON.parse(e.data);if("string"==typeof t)try{t=JSON.parse(t)}catch(e){}this.dispatchEvent("message",[t])}}var v=m;var f=class extends i{constructor(e,t=0,i=!0){const s=(t,i)=>e.lastSpeaker===t||null===e.lastSpeaker&&0===i;super({applicable:i,priority:t,background:()=>e.silence?"rgb(0,0,0)":"rgb(100,200,250)",positions:{x:t=>s(t.id,t.drawIndex)?e.silence?2:5:5+80*t.drawIndex,y:t=>s(t.id,t.drawIndex)?e.silence?2:5:t.height-60-5,width:t=>s(t.id,t.drawIndex)?e.silence?t.width-4:t.width-10:80,height:t=>s(t.id,t.drawIndex)?e.silence?t.height-4:t.height-10:60,zIndex:e=>s(e.id,e.drawIndex)?0:1}})}};const k=Object.freeze(["mesh","sfu","mcu"]),y=(e,t)=>(e%t+t)%t;class b extends(c()){constructor(e="mesh"){super(),this._architecture=e}next(){const e=this._architecture;this._architecture=this.nextValue(),this.dispatchEvent("architecture:next",[this._architecture,e]),this.dispatchEvent("architecture:switch",[this._architecture,e])}nextValue(){return k[y(k.indexOf(this._architecture)+1,k.length)]}prev(){const e=this._architecture;this._architecture=this.prevValue(),this.dispatchEvent("architecture:prev",[this._architecture,e]),this.dispatchEvent("architecture:switch",[this._architecture,e])}prevValue(){return k[y(k.indexOf(this._architecture)-1,k.length)]}set value(e){if(e=e.toLowerCase(),-1===k.indexOf(e))throw new Error("INVALID ARCHITECTURE");const t=this._architecture;this._architecture=e,this.dispatchEvent("architecture:switch",[this._architecture,t])}get value(){return this._architecture}}var M=b,w=class extends(c()){constructor({name:e,signaler:i,architecture:s="mesh",iceServers:n=[],video:r={width:640,height:480},verbose:o=!1,logger:c=console}){super(),this._name=e,this._signaler=i,this._verbose=o,this._logger=c,this._peers=new u({signaler:i,name:e,iceServers:n,verbose:o,logger:c}),this._sfu=new h({signaler:i,name:e,iceServers:n,peer:"@sfu",isYielding:!1,verbose:o,logger:c}),this._mcu=new h({signaler:i,name:e,iceServers:n,peer:"@mcu",isYielding:!1,verbose:o,logger:c}),this._speechDetection=new g({threshold:65}),this._videoMixer=new a(r),this._videoMixer.addConfig(new f(this._speechDetection),"speaker"),this._audioMixer=new t,this._architecture=new M(s),this._addedMedia=[],this._display=null,i.addEventListener("message",e=>{"architecture:switch"===e.type&&this._handleArchitectureSwitch(e.data)}),this._peers.addEventListener("trackadded",(e,t)=>{"mesh"===this._architecture.value&&(this._videoMixer.addMedia(e,"peers-"+t),"audio"===e.kind&&this._speechDetection.addMedia(e,"peers-"+t),this.dispatchEvent("trackadded",[e,t]),this.dispatchEvent("mediachanged",[]))}),this._sfu.addEventListener("trackadded",e=>{if("sfu"===this._architecture.value){const t=e=>{this._videoMixer.addMedia(e,"sfu-"+e.meta),"audio"===e.kind&&this._speechDetection.addMedia(e,"sfu-"+e.meta),this.dispatchEvent("trackadded",[e,e.meta]),this.dispatchEvent("mediachanged",[])};e.meta?t(e):e.addEventListener("metachanged",()=>t(e,e.meta))}}),this._mcu.addEventListener("trackadded",()=>{this._updateDisplayedStream()}),this._peers.addEventListener("userconnected",e=>this.dispatchEvent("userconnected",[e])),this._peers.addEventListener("userdisconnected",e=>this.dispatchEvent("userdisconnected",[e])),this._peers.addEventListener("connectionclosed",e=>{"mesh"===this._architecture.value&&(this._videoMixer.removeMedia("peers-"+e),this._audioMixer.removeMedia("peers-"+e),this._speechDetection.removeMedia("peers-"+e),this._updateDisplayedStream())}),this.addEventListener("mediachanged",()=>this._updateDisplayedStream())}get architecture(){return this._architecture.value}get members(){return this._peers.users}_getArchitectureHandler(e=null){return null===e&&(e=this._architecture.value),{mesh:this._peers,mcu:this._mcu,sfu:this._sfu}[e]}_handleArchitectureSwitch(e){const t=this._architecture.value;this._architecture.value=e,this._addedMedia.forEach(t=>this._getArchitectureHandler(e).addMedia(t)),"mesh"===e?(this._clearLocalMediaProcessors(),this._getArchitectureHandler("mesh").users.forEach(e=>{this._getArchitectureHandler("mesh").get(e).tracks.forEach(t=>{this._addTrackToLocalMediaProcessors(t,e)})}),this._addedMedia.forEach(e=>this._addLocalMediaToLocalMediaProcessors(e))):"sfu"===e?(this._clearLocalMediaProcessors(),this._getArchitectureHandler("sfu").tracks.forEach(e=>{this._addTrackToLocalMediaProcessors(e,e.meta)}),this._addedMedia.forEach(e=>this._addLocalMediaToLocalMediaProcessors(e))):"mcu"===e&&this.dispatchEvent("mediachanged",[]),this._updateDisplayedStream(),this._getArchitectureHandler(t).removeMedia(),this.dispatchEvent("architectureswitched",[e,t])}switchArchitecture(e){void 0===e&&(e=this._architecture.nextValue()),this._verbose&&this._logger.log("request switching to architecture",e);let t={type:"architecture:switch",receiver:"@server",data:e};this._signaler.send(t)}nextArchitecture(){this.switchArchitecture(this._architecture.nextValue())}get nextArchitectureValue(){return this._architecture.nextValue()}previousArchitecture(){this.switchArchitecture(this._architecture.prevValue())}get prevArchitectureValue(){return this._architecture.prevValue()}_clearLocalMediaProcessors(){this._videoMixer.removeMedia(),this._speechDetection.removeMedia(),this._audioMixer.removeMedia()}_addTrackToLocalMediaProcessors(e,t){"video"===e.kind?this._videoMixer.addMedia(e,t):(this._audioMixer.addMedia(e,t),this._speechDetection.addMedia(e,t))}get out(){return"mcu"===this._architecture.value?this._mcu.streams[0]:new MediaStream([this._videoMixer.outputTrack,this._audioMixer.outputTrack])}async addWebcam(e={video:!0,audio:!0}){const t=await window.navigator.mediaDevices.getUserMedia(e);this.addMedia(t)}muteMedia(e="*",t=!0){this._getArchitectureHandler().muteMedia(e,t)}async addMedia(e){e.meta||(e.meta=this._name),this._getArchitectureHandler().addMedia(e),this._addLocalMediaToLocalMediaProcessors(e),this._addedMedia.push(e),this._updateDisplayedStream()}removeMedia(e="*"){e instanceof MediaStream?e.getTracks().forEach(t=>{this._getArchitectureHandler().removeMedia(t),this._removeLocalMediaFromLocalMediaProcessors(e)}):e instanceof MediaStreamTrack?(this._getArchitectureHandler().removeMedia(e),this._removeLocalMediaFromLocalMediaProcessors(e)):"string"==typeof e&&["video","audio","*"].indexOf(e.toLowerCase())>=0?(e=e.toLowerCase(),this._getArchitectureHandler().removeMedia(e),this._removeLocalMediaFromLocalMediaProcessors(e)):console.log("unknown media type",e),this._addedMedia=this._addedMedia.filter(t=>{if("string"==typeof e){if(e=e.toLocaleLowerCase(),t instanceof MediaStreamTrack)return t.kind!==e||"*"!==e;if(t instanceof MediaStream)return t.getTracks().filter(t=>t.kind!==e||"*"!==e).forEach(e=>t.removeTrack(e)),t.getTracks().length>0}else if(e instanceof MediaStream){if(t instanceof MediaStream)return t.id!==e.id;if(t instanceof MediaStreamTrack)return-1===e.getTracks().findIndex(e=>e.id===t.id)}else if(e instanceof MediaStreamTrack){if(t instanceof MediaStream)return t.getTracks().forEach(i=>{i.id===e.id&&t.removeTrack(i)}),t.getTracks().length>0;if(t instanceof MediaStreamTrack)return e.id!==t.id}})}_addLocalMediaToLocalMediaProcessors(e){"mcu"!==this._architecture.value&&(this._speechDetection.addMedia(e,this._name),this._videoMixer.addMedia(e,this._name))}_removeLocalMediaFromLocalMediaProcessors(e){e instanceof MediaStream?e.getTracks().forEach(e=>{"video"===e.kind?this._videoMixer.removeMedia(e):(this._audioMixer.removeMedia(e),this._speechDetection.removeMedia(e))}):"string"==typeof e&&["video","audio","*"].indexOf(e.toLowerCase())>=0&&(e=e.toLowerCase(),this._getArchitectureHandler().removeMedia(e),"*"!==e&&"video"!==e||this._videoMixer.removeMedia(),"*"!==e&&"audio"!==e||(this._audioMixer.removeMedia(),this._speechDetection.removeMedia()))}displayOn(e){"string"==typeof e&&(e=document.querySelector(e)),this._display=e,this._verbose&&this._logger.log("display output on",e),this._updateDisplayedStream()}_updateDisplayedStream(){this._display&&(this._verbose&&this._logger.log("updated display"),this._display.srcObject=this.out)}get numberOfAddedMedia(){return this._addedMedia.length}get addedTracks(){return this.addedMedia.reduce((e,t)=>t instanceof MediaStream?e+t.getTracks().length:e+1,0)}};function S(e){if(null==e||isNaN(e))throw new Error("Invalid argument, n must be a number but is "+e);if(0===e||1===e)return[[e,e]];const t={};for(let i=1;i<=Math.floor(e/2);i++){e%i==0&&(t[i]||(t[e/i]=i))}return Object.keys(t).map(e=>[t[e],+e])}var E={Signaler:v,Recorder:o,VideoMixer:a,AudioMixer:t,Transcriber:p,Connection:h,ConnectionManager:u,SpeechDetection:g,Conference:w,VideoMixingConfiguration:i,PlaceHolderMediaGenerator:class{constructor({enable:e=!1}={}){this._audio=this._generateAudio(e),this._video=this._generateVideo(e)}get out(){return new MediaStream([this._video,this._audio])}get audioTrack(){return this._audio}get videoTrack(){return this._video}_generateAudio(e=!1){let t=new AudioContext,i=t.createOscillator(),s=i.connect(t.createMediaStreamDestination());return i.start(),Object.assign(s.stream.getAudioTracks()[0],{enabled:e})}_generateVideo(e=!1,t={width:360,height:420}){let i=Object.assign(document.createElement("canvas"),t),s=i.getContext("2d");s.fillRect(0,0,t.width,t.height),e&&window.setInterval(()=>{s.fillStyle="rgb("+Math.floor(255*Math.random())+","+Math.floor(255*Math.random())+","+Math.floor(255*Math.random())+")",s.fillRect(0,0,t.width,t.height)},1e3);let n=i.captureStream(1);return Object.assign(n.getVideoTracks()[0],{enabled:e})}},VideoMixingConfigurations:{Grid:class extends i{constructor(e=0,t=(e=>Math.abs(S(e.length)[0][1]-S(e.length)[0][0])<=2)){super({applicable:t,priority:0,positions:function(e,t,i){const[s,n]=S(i.length)[0],r=this.width/n,a=this.height/s;return{x:t%n*r,y:~~(t/n)*a,width:r,height:a}}})}},Middle:class extends i{constructor(e=0){super({priority:e,applicable:e=>5===e.length,positions:[{x:0,y:0,width:e=>e.width/2,height:e=>e.height/2},{x:e=>e.width/2,y:0,width:e=>e.width/2,height:e=>e.height/2},{x:0,y:e=>e.height/2,width:e=>e.width/2,height:e=>e.height/2},{x:e=>e.width/2,y:e=>e.height/2,width:e=>e.width/2,height:e=>e.height/2},{x:e=>e.width/4,y:e=>e.height/4,width:e=>e.width/2,height:e=>e.height/2}]})}},Line:class extends i{constructor(e=0,t=(e=>e.length<3)){super({applicable:t,priority:e,positions:function(e,t,i){return{x:this.width/i.length*t,y:0,width:this.width/i.length,height:this.height}}})}},Speaker:f},wrapTunnelAsSignaler:e=>({send:t=>{e.doExport("message",t)},addEventListener:(t,i)=>{"message"===t.toLowerCase()&&e.onImport("message",(function(e){i(e)}))},close(){},closed:!1})},x=E.Signaler,T=E.Recorder,C=E.VideoMixer,L=E.AudioMixer,I=E.Transcriber,O=E.Connection,A=E.ConnectionManager,D=E.SpeechDetection,j=E.Conference,P=E.VideoMixingConfiguration,R=E.PlaceHolderMediaGenerator,V=E.VideoMixingConfigurations,F=E.wrapTunnelAsSignaler;return e.AudioMixer=L,e.Conference=j,e.Connection=O,e.ConnectionManager=A,e.PlaceHolderMediaGenerator=R,e.Recorder=T,e.Signaler=x,e.SpeechDetection=D,e.Transcriber=I,e.VideoMixer=C,e.VideoMixingConfiguration=P,e.VideoMixingConfigurations=V,e.default=E,e.wrapTunnelAsSignaler=F,e}({});
